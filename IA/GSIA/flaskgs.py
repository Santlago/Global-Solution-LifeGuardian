# -*- coding: utf-8 -*-
"""FlaskGS.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11xb9qqpKeLLOXbmv059XZpeVuZL7WZDY
"""

# Importa a classe Flask do módulo Flask, o Flask é um framework web em Python que simplifica o desenvolvimento de aplicativos web.
from flask import Flask, request, jsonify
# # NumPy é uma biblioteca responsável pela execução de diversas
# tarefas matemáticas, além de outras funções incorporadas,
# como a geração de números aleatórios.
import numpy as np
# O Joblib é uma biblioteca para Python que desempenha um papel crucial na
# facilitação da execução eficiente de tarefas intensivas em computação,
# especialmente aquelas relacionadas ao processamento paralelo e à serialização de objetos.
import joblib

# Carregar o modelo treinado
model = joblib.load('modelo_mortality.pkl')

app = Flask(__name__)

# Rota para receber os dados e fazer previsões
@app.route('/prever', methods=['GET'])
def prever():
    # Obter parâmetros da solicitação GET
    parametro1 = float(request.args.get('Child Mortality(1 to 4)'))
    parametro2 = float(request.args.get('Mortality Rate'))

    # Fazer previsões usando o modelo
    entrada = np.array([[parametro1, parametro2]])
    resultado = model.predict(entrada)

    # Mapear o código da espécie para o nome da espécie usando iris.target_names
    especie = resultado[0]

    # Retornar o resultado como JSON
    return jsonify({'especie_predita': especie})

if __name__ == '__main__':
    print("Servidor Flask em execução")
    # Executar o aplicativo Flask
    app.run(debug=True)